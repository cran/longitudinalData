//generated by saveTrianglesAsASY

import three;

size(20cm);

//currentprojection=perspective(250,-250,250);
currentlight=Viewport;

typedef path3[] trimesh;

// Vertices
triple[] V;
V[0] = (0.000000, 0.000000, 0.000000);
V[1] = (1.000000, 0.000000, 0.000000);
V[2] = (0.000000, 0.500000, 0.000000);
V[3] = (0.000000, 0.000000, 0.500000);
V[4] = (1.000000, 0.000000, 0.500000);
V[5] = (1.000000, 0.500000, 0.000000);
V[6] = (0.000000, 0.000000, -0.010000);
V[7] = (1.000000, 0.000000, -0.010000);
V[8] = (0.000000, -0.010000, 0.000000);
V[9] = (0.000000, 0.010000, 0.000000);
V[10] = (1.000000, 0.010000, 0.000000);
V[11] = (1.000000, -0.010000, 0.000000);
V[12] = (0.000000, 0.500000, -0.010000);
V[13] = (0.000000, 0.510000, 0.000000);
V[14] = (0.000000, 0.490000, 0.000000);
V[15] = (0.000000, 0.000000, 0.490000);
V[16] = (0.000000, 0.010000, 0.500000);
V[17] = (0.000000, -0.010000, 0.500000);
V[18] = (0.000000, 0.500000, -0.045000);
V[19] = (0.000000, 0.560000, 0.035000);
V[20] = (0.000000, 0.495000, -0.040000);
V[21] = (0.000000, 0.505000, -0.040000);
V[22] = (0.000000, 0.565000, 0.040000);
V[23] = (0.000000, 0.555000, 0.040000);
V[24] = (0.000000, 0.500000, 0.035000);
V[25] = (0.000000, 0.530000, -0.005000);
V[26] = (0.000000, 0.495000, 0.040000);
V[27] = (0.000000, 0.505000, 0.040000);
V[28] = (0.000000, 0.535000, 0.000000);
V[29] = (0.000000, 0.525000, 0.000000);
V[30] = (0.000000, -0.030000, 0.595000);
V[31] = (0.000000, 0.030000, 0.595000);
V[32] = (0.000000, -0.035000, 0.600000);
V[33] = (0.000000, -0.025000, 0.600000);
V[34] = (0.000000, 0.035000, 0.600000);
V[35] = (0.000000, 0.025000, 0.600000);
V[36] = (0.000000, -0.030000, 0.525000);
V[37] = (0.000000, -0.025000, 0.530000);
V[38] = (0.000000, -0.035000, 0.530000);
V[39] = (0.000000, 0.030000, 0.525000);
V[40] = (0.000000, 0.035000, 0.530000);
V[41] = (0.000000, 0.025000, 0.530000);
V[42] = (0.000000, 0.360593, 0.034670);
V[43] = (0.142857, 0.330370, 0.007235);
V[44] = (0.000000, 0.350593, 0.044670);
V[45] = (0.000000, 0.370593, 0.044670);
V[46] = (0.142857, 0.340370, 0.017235);
V[47] = (0.142857, 0.320370, 0.017235);
V[48] = (0.285714, 0.240602, 0.057131);
V[49] = (0.285714, 0.250602, 0.067131);
V[50] = (0.285714, 0.230602, 0.067131);
V[51] = (0.428571, 0.310822, 0.082187);
V[52] = (0.428571, 0.320822, 0.092187);
V[53] = (0.428571, 0.300822, 0.092187);
V[54] = (0.571429, 0.308999, 0.174766);
V[55] = (0.571429, 0.318999, 0.184766);
V[56] = (0.571429, 0.298999, 0.184766);
V[57] = (0.714286, 0.310818, 0.265840);
V[58] = (0.714286, 0.320818, 0.275840);
V[59] = (0.714286, 0.300818, 0.275840);
V[60] = (0.857143, 0.000000, 0.352931);
V[61] = (0.857143, 0.010000, 0.362931);
V[62] = (0.857143, -0.010000, 0.362931);
V[63] = (1.000000, 0.147583, 0.490000);
V[64] = (1.000000, 0.157583, 0.500000);
V[65] = (1.000000, 0.137583, 0.500000);
V[66] = (0.000000, 0.277125, -0.010000);
V[67] = (0.142857, 0.357458, 0.005916);
V[68] = (0.000000, 0.267125, 0.000000);
V[69] = (0.000000, 0.287125, 0.000000);
V[70] = (0.142857, 0.367458, 0.015916);
V[71] = (0.142857, 0.347458, 0.015916);
V[72] = (0.285714, 0.351699, 0.023530);
V[73] = (0.285714, 0.361699, 0.033530);
V[74] = (0.285714, 0.341699, 0.033530);
V[75] = (0.428571, 0.347371, 0.016432);
V[76] = (0.428571, 0.357371, 0.026432);
V[77] = (0.428571, 0.337371, 0.026432);
V[78] = (0.571429, 0.239934, 0.069657);
V[79] = (0.571429, 0.249934, 0.079657);
V[80] = (0.571429, 0.229934, 0.079657);
V[81] = (0.714286, 0.330570, 0.114349);
V[82] = (0.714286, 0.340570, 0.124349);
V[83] = (0.714286, 0.320570, 0.124349);
V[84] = (0.857143, 0.430211, 0.170780);
V[85] = (0.857143, 0.440211, 0.180780);
V[86] = (0.857143, 0.420211, 0.180780);
V[87] = (1.000000, 0.500000, 0.253386);
V[88] = (1.000000, 0.510000, 0.263386);
V[89] = (1.000000, 0.490000, 0.263386);
V[90] = (0.000000, 0.500000, 0.500000);
V[91] = (0.000000, 0.000000, 0.010000);
V[92] = (0.000000, 0.500000, -0.035000);
V[93] = (0.000000, 0.500000, 0.045000);
V[94] = (0.000000, -0.030000, 0.605000);
V[95] = (0.000000, 0.030000, 0.605000);
V[96] = (0.000000, -0.030000, 0.535000);
V[97] = (0.000000, 0.360593, 0.054670);
V[98] = (0.142857, 0.330370, 0.027235);
V[99] = (0.285714, 0.240602, 0.077131);
V[100] = (0.428571, 0.310822, 0.102187);
V[101] = (0.571429, 0.308999, 0.194766);
V[102] = (0.714286, 0.310818, 0.285840);
V[103] = (0.857143, 0.000000, 0.372931);
V[104] = (0.000000, 0.277125, 0.010000);
V[105] = (0.142857, 0.357458, 0.025916);
V[106] = (0.285714, 0.351699, 0.043530);
V[107] = (0.428571, 0.347371, 0.036432);
V[108] = (0.571429, 0.239934, 0.089657);
V[109] = (0.714286, 0.330570, 0.134349);
V[110] = (0.857143, 0.430211, 0.190780);
V[111] = (1.000000, 0.500000, 0.500000);
V[112] = (1.000000, 0.000000, 0.010000);
V[113] = (0.000000, 0.500000, 0.010000);
V[114] = (0.000000, 0.000000, 0.510000);
V[115] = (0.000000, 0.560000, 0.045000);
V[116] = (0.000000, 0.530000, 0.005000);
V[117] = (0.000000, 0.030000, 0.605000);
V[118] = (0.000000, 0.030000, 0.535000);
V[119] = (0.714286, 0.310818, 0.285840);
V[120] = (1.000000, 0.147583, 0.510000);
V[121] = (1.000000, 0.500000, 0.273386);

guide3 triface_(int i, int j, int k) {
  guide3 gh; gh=V[i-1]--V[j-1]--V[k-1]--cycle;
  return gh;
};

// Faces
trimesh F;
F[0] = triface_(1, 2, 3);
F[1] = triface_(2, 3, 6);
F[2] = triface_(1, 2, 4);
F[3] = triface_(2, 4, 5);
F[4] = triface_(1, 3, 4);
F[5] = triface_(3, 4, 91);
F[6] = triface_(4, 5, 91);
F[7] = triface_(5, 91, 112);
F[8] = triface_(2, 5, 6);
F[9] = triface_(5, 6, 112);
F[10] = triface_(3, 6, 91);
F[11] = triface_(6, 91, 112);
F[12] = triface_(7, 8, 9);
F[13] = triface_(8, 9, 12);
F[14] = triface_(7, 8, 10);
F[15] = triface_(8, 10, 11);
F[16] = triface_(7, 9, 10);
F[17] = triface_(9, 10, 92);
F[18] = triface_(10, 11, 92);
F[19] = triface_(11, 92, 113);
F[20] = triface_(8, 11, 12);
F[21] = triface_(11, 12, 113);
F[22] = triface_(9, 12, 92);
F[23] = triface_(12, 92, 113);
F[24] = triface_(7, 13, 9);
F[25] = triface_(13, 9, 15);
F[26] = triface_(7, 13, 10);
F[27] = triface_(13, 10, 14);
F[28] = triface_(7, 9, 10);
F[29] = triface_(9, 10, 92);
F[30] = triface_(10, 14, 92);
F[31] = triface_(14, 92, 114);
F[32] = triface_(13, 14, 15);
F[33] = triface_(14, 15, 114);
F[34] = triface_(9, 15, 92);
F[35] = triface_(15, 92, 114);
F[36] = triface_(7, 16, 9);
F[37] = triface_(16, 9, 18);
F[38] = triface_(7, 16, 10);
F[39] = triface_(16, 10, 17);
F[40] = triface_(7, 9, 10);
F[41] = triface_(9, 10, 92);
F[42] = triface_(10, 17, 92);
F[43] = triface_(17, 92, 115);
F[44] = triface_(16, 17, 18);
F[45] = triface_(17, 18, 115);
F[46] = triface_(9, 18, 92);
F[47] = triface_(18, 92, 115);
F[48] = triface_(19, 20, 21);
F[49] = triface_(20, 21, 24);
F[50] = triface_(19, 20, 22);
F[51] = triface_(20, 22, 23);
F[52] = triface_(19, 21, 22);
F[53] = triface_(21, 22, 93);
F[54] = triface_(22, 23, 93);
F[55] = triface_(23, 93, 116);
F[56] = triface_(20, 23, 24);
F[57] = triface_(23, 24, 116);
F[58] = triface_(21, 24, 93);
F[59] = triface_(24, 93, 116);
F[60] = triface_(25, 26, 27);
F[61] = triface_(26, 27, 30);
F[62] = triface_(25, 26, 28);
F[63] = triface_(26, 28, 29);
F[64] = triface_(25, 27, 28);
F[65] = triface_(27, 28, 94);
F[66] = triface_(28, 29, 94);
F[67] = triface_(29, 94, 117);
F[68] = triface_(26, 29, 30);
F[69] = triface_(29, 30, 117);
F[70] = triface_(27, 30, 94);
F[71] = triface_(30, 94, 117);
F[72] = triface_(31, 32, 33);
F[73] = triface_(32, 33, 36);
F[74] = triface_(31, 32, 34);
F[75] = triface_(32, 34, 35);
F[76] = triface_(31, 33, 34);
F[77] = triface_(33, 34, 95);
F[78] = triface_(34, 35, 95);
F[79] = triface_(35, 95, 96);
F[80] = triface_(32, 35, 36);
F[81] = triface_(35, 36, 118);
F[82] = triface_(33, 36, 95);
F[83] = triface_(36, 95, 96);
F[84] = triface_(32, 37, 36);
F[85] = triface_(37, 36, 39);
F[86] = triface_(32, 37, 35);
F[87] = triface_(37, 35, 38);
F[88] = triface_(32, 36, 35);
F[89] = triface_(36, 35, 96);
F[90] = triface_(35, 38, 96);
F[91] = triface_(38, 96, 97);
F[92] = triface_(37, 38, 39);
F[93] = triface_(38, 39, 97);
F[94] = triface_(36, 39, 96);
F[95] = triface_(39, 96, 97);
F[96] = triface_(37, 40, 39);
F[97] = triface_(40, 39, 42);
F[98] = triface_(37, 40, 38);
F[99] = triface_(40, 38, 41);
F[100] = triface_(37, 39, 38);
F[101] = triface_(39, 38, 97);
F[102] = triface_(38, 41, 97);
F[103] = triface_(41, 97, 119);
F[104] = triface_(40, 41, 42);
F[105] = triface_(41, 42, 119);
F[106] = triface_(39, 42, 97);
F[107] = triface_(42, 97, 119);
F[108] = triface_(43, 44, 45);
F[109] = triface_(44, 45, 48);
F[110] = triface_(43, 44, 46);
F[111] = triface_(44, 46, 47);
F[112] = triface_(43, 45, 46);
F[113] = triface_(45, 46, 98);
F[114] = triface_(46, 47, 98);
F[115] = triface_(47, 98, 99);
F[116] = triface_(44, 47, 48);
F[117] = triface_(47, 48, 99);
F[118] = triface_(45, 48, 98);
F[119] = triface_(48, 98, 99);
F[120] = triface_(44, 49, 48);
F[121] = triface_(49, 48, 51);
F[122] = triface_(44, 49, 47);
F[123] = triface_(49, 47, 50);
F[124] = triface_(44, 48, 47);
F[125] = triface_(48, 47, 99);
F[126] = triface_(47, 50, 99);
F[127] = triface_(50, 99, 100);
F[128] = triface_(49, 50, 51);
F[129] = triface_(50, 51, 100);
F[130] = triface_(48, 51, 99);
F[131] = triface_(51, 99, 100);
F[132] = triface_(49, 52, 51);
F[133] = triface_(52, 51, 54);
F[134] = triface_(49, 52, 50);
F[135] = triface_(52, 50, 53);
F[136] = triface_(49, 51, 50);
F[137] = triface_(51, 50, 100);
F[138] = triface_(50, 53, 100);
F[139] = triface_(53, 100, 101);
F[140] = triface_(52, 53, 54);
F[141] = triface_(53, 54, 101);
F[142] = triface_(51, 54, 100);
F[143] = triface_(54, 100, 101);
F[144] = triface_(52, 55, 54);
F[145] = triface_(55, 54, 57);
F[146] = triface_(52, 55, 53);
F[147] = triface_(55, 53, 56);
F[148] = triface_(52, 54, 53);
F[149] = triface_(54, 53, 101);
F[150] = triface_(53, 56, 101);
F[151] = triface_(56, 101, 102);
F[152] = triface_(55, 56, 57);
F[153] = triface_(56, 57, 102);
F[154] = triface_(54, 57, 101);
F[155] = triface_(57, 101, 102);
F[156] = triface_(55, 58, 57);
F[157] = triface_(58, 57, 60);
F[158] = triface_(55, 58, 56);
F[159] = triface_(58, 56, 59);
F[160] = triface_(55, 57, 56);
F[161] = triface_(57, 56, 102);
F[162] = triface_(56, 59, 102);
F[163] = triface_(59, 102, 120);
F[164] = triface_(58, 59, 60);
F[165] = triface_(59, 60, 120);
F[166] = triface_(57, 60, 102);
F[167] = triface_(60, 102, 120);
F[168] = triface_(58, 61, 60);
F[169] = triface_(61, 60, 63);
F[170] = triface_(58, 61, 59);
F[171] = triface_(61, 59, 62);
F[172] = triface_(58, 60, 59);
F[173] = triface_(60, 59, 103);
F[174] = triface_(59, 62, 103);
F[175] = triface_(62, 103, 104);
F[176] = triface_(61, 62, 63);
F[177] = triface_(62, 63, 104);
F[178] = triface_(60, 63, 103);
F[179] = triface_(63, 103, 104);
F[180] = triface_(61, 64, 63);
F[181] = triface_(64, 63, 66);
F[182] = triface_(61, 64, 62);
F[183] = triface_(64, 62, 65);
F[184] = triface_(61, 63, 62);
F[185] = triface_(63, 62, 104);
F[186] = triface_(62, 65, 104);
F[187] = triface_(65, 104, 121);
F[188] = triface_(64, 65, 66);
F[189] = triface_(65, 66, 121);
F[190] = triface_(63, 66, 104);
F[191] = triface_(66, 104, 121);
F[192] = triface_(67, 68, 69);
F[193] = triface_(68, 69, 72);
F[194] = triface_(67, 68, 70);
F[195] = triface_(68, 70, 71);
F[196] = triface_(67, 69, 70);
F[197] = triface_(69, 70, 105);
F[198] = triface_(70, 71, 105);
F[199] = triface_(71, 105, 106);
F[200] = triface_(68, 71, 72);
F[201] = triface_(71, 72, 106);
F[202] = triface_(69, 72, 105);
F[203] = triface_(72, 105, 106);
F[204] = triface_(68, 73, 72);
F[205] = triface_(73, 72, 75);
F[206] = triface_(68, 73, 71);
F[207] = triface_(73, 71, 74);
F[208] = triface_(68, 72, 71);
F[209] = triface_(72, 71, 106);
F[210] = triface_(71, 74, 106);
F[211] = triface_(74, 106, 107);
F[212] = triface_(73, 74, 75);
F[213] = triface_(74, 75, 107);
F[214] = triface_(72, 75, 106);
F[215] = triface_(75, 106, 107);
F[216] = triface_(73, 76, 75);
F[217] = triface_(76, 75, 78);
F[218] = triface_(73, 76, 74);
F[219] = triface_(76, 74, 77);
F[220] = triface_(73, 75, 74);
F[221] = triface_(75, 74, 107);
F[222] = triface_(74, 77, 107);
F[223] = triface_(77, 107, 108);
F[224] = triface_(76, 77, 78);
F[225] = triface_(77, 78, 108);
F[226] = triface_(75, 78, 107);
F[227] = triface_(78, 107, 108);
F[228] = triface_(76, 79, 78);
F[229] = triface_(79, 78, 81);
F[230] = triface_(76, 79, 77);
F[231] = triface_(79, 77, 80);
F[232] = triface_(76, 78, 77);
F[233] = triface_(78, 77, 108);
F[234] = triface_(77, 80, 108);
F[235] = triface_(80, 108, 109);
F[236] = triface_(79, 80, 81);
F[237] = triface_(80, 81, 109);
F[238] = triface_(78, 81, 108);
F[239] = triface_(81, 108, 109);
F[240] = triface_(79, 82, 81);
F[241] = triface_(82, 81, 84);
F[242] = triface_(79, 82, 80);
F[243] = triface_(82, 80, 83);
F[244] = triface_(79, 81, 80);
F[245] = triface_(81, 80, 109);
F[246] = triface_(80, 83, 109);
F[247] = triface_(83, 109, 110);
F[248] = triface_(82, 83, 84);
F[249] = triface_(83, 84, 110);
F[250] = triface_(81, 84, 109);
F[251] = triface_(84, 109, 110);
F[252] = triface_(82, 85, 84);
F[253] = triface_(85, 84, 87);
F[254] = triface_(82, 85, 83);
F[255] = triface_(85, 83, 86);
F[256] = triface_(82, 84, 83);
F[257] = triface_(84, 83, 110);
F[258] = triface_(83, 86, 110);
F[259] = triface_(86, 110, 111);
F[260] = triface_(85, 86, 87);
F[261] = triface_(86, 87, 111);
F[262] = triface_(84, 87, 110);
F[263] = triface_(87, 110, 111);
F[264] = triface_(85, 88, 87);
F[265] = triface_(88, 87, 90);
F[266] = triface_(85, 88, 86);
F[267] = triface_(88, 86, 89);
F[268] = triface_(85, 87, 86);
F[269] = triface_(87, 86, 111);
F[270] = triface_(86, 89, 111);
F[271] = triface_(89, 111, 122);
F[272] = triface_(88, 89, 90);
F[273] = triface_(89, 90, 122);
F[274] = triface_(87, 90, 111);
F[275] = triface_(90, 111, 122);

// Colors
material M[];
M[0] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.020000);
M[1] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.020000);
M[2] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.020000);
M[3] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.020000);
M[4] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.020000);
M[5] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.020000);
M[6] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.020000);
M[7] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.020000);
M[8] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.020000);
M[9] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.020000);
M[10] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.020000);
M[11] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.020000);
M[12] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[13] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[14] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[15] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[16] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[17] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[18] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[19] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[20] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[21] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[22] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[23] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[24] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[25] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[26] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[27] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[28] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[29] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[30] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[31] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[32] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[33] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[34] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[35] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[36] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[37] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[38] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[39] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[40] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[41] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[42] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[43] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[44] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[45] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[46] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[47] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[48] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[49] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[50] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[51] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[52] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[53] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[54] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[55] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[56] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[57] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[58] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[59] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[60] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[61] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[62] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[63] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[64] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[65] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[66] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[67] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[68] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[69] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[70] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[71] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[72] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[73] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[74] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[75] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[76] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[77] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[78] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[79] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[80] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[81] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[82] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[83] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[84] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[85] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[86] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[87] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[88] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[89] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[90] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[91] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[92] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[93] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[94] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[95] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[96] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[97] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[98] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[99] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[100] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[101] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[102] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[103] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[104] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[105] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[106] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[107] = rgb(0.000000, 0.000000, 0.000000) + opacity(0.800000);
M[108] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[109] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[110] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[111] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[112] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[113] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[114] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[115] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[116] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[117] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[118] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[119] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[120] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[121] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[122] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[123] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[124] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[125] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[126] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[127] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[128] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[129] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[130] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[131] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[132] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[133] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[134] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[135] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[136] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[137] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[138] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[139] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[140] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[141] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[142] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[143] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[144] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[145] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[146] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[147] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[148] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[149] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[150] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[151] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[152] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[153] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[154] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[155] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[156] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[157] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[158] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[159] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[160] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[161] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[162] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[163] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[164] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[165] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[166] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[167] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[168] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[169] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[170] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[171] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[172] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[173] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[174] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[175] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[176] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[177] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[178] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[179] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[180] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[181] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[182] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[183] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[184] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[185] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[186] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[187] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[188] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[189] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[190] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[191] = rgb(255.000000, 0.000000, 0.000000) + opacity(0.800000);
M[192] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[193] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[194] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[195] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[196] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[197] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[198] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[199] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[200] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[201] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[202] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[203] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[204] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[205] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[206] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[207] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[208] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[209] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[210] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[211] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[212] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[213] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[214] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[215] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[216] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[217] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[218] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[219] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[220] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[221] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[222] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[223] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[224] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[225] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[226] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[227] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[228] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[229] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[230] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[231] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[232] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[233] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[234] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[235] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[236] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[237] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[238] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[239] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[240] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[241] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[242] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[243] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[244] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[245] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[246] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[247] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[248] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[249] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[250] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[251] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[252] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[253] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[254] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[255] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[256] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[257] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[258] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[259] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[260] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[261] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[262] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[263] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[264] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[265] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[266] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[267] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[268] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[269] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[270] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[271] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[272] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[273] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[274] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);
M[275] = rgb(0.000000, 205.000000, 0.000000) + opacity(0.800000);

draw(surface(F), M);
